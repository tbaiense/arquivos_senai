package org.thiago;

import java.io.DataInputStream;
import java.io.IOException;

public class Teste {
	
	public static void main(String[] args) throws IOException {
		System.out.print("ID DO CLIENTE " + telaReceberCliente());
	}
	// Retorna id do cliente para o pedido
	private static int telaReceberCliente() throws IOException{
		String nome, tel;
		int id; // Id do objeto cliente a ser retornado
		
		System.out.print("telefone do cliente: ");
		tel = receberTelefone();
		
		/*Controle de registro de clientes
		 * Se cliente com o mesmo telefone existir
		 * 		referenciar o id do cliente
		 * Senao
		 * 		criar novo cliente e referenciar o id*/
		
		// Procurar cliente na lista
		Cliente clienteEncontrado = ListaClientes.getCliente(tel); // Retorna nulo se não encontrar
		if (clienteEncontrado != null) { // Cliente já existente na lista
			System.out.print("Um cliente com esse número foi encontrado: " + clienteEncontrado.getNome() 
					+ "\nDeseja informar outro nome?\n SIM ou NAO >>> ");
			
			if (readYORN()) { // Se for alterar nome do cliente
				System.out.print("novo nome do cliente: ");
				nome = receberNome();
				clienteEncontrado.setNome(nome);
				System.out.println("ALTERADO COM SUCESSO! (" + clienteEncontrado + ")");
			}
			return clienteEncontrado.getId();
			
		} else { // Não existe na lista
			System.out.print("nome do cliente: ");
			nome = receberNome();
			Cliente novoCliente = new Cliente(nome, tel);
			ListaClientes.push(novoCliente);
			return novoCliente.getId();
		}
	}
	
	private static String receberTelefone() throws IOException {
		do {// Receber tel do cliente
			try {
				DataInputStream in = new DataInputStream(System.in);
				String tel = in.readLine();
				Cliente.validateTel(tel); // Checa se telefone maior que 8 caracteres
				return tel;
			} catch (IllegalArgumentException e) {
				System.out.print("ERRO: " + e.getMessage() + "\nTente novamente: ");
			}
		} while (true);
	}
	
	private static String receberNome() throws IOException {
		do {// Receber novo nome do cliente
			try {
				DataInputStream in = new DataInputStream(System.in);
				String nome = in.readLine();
				Cliente.validateNome(nome); // Checa se telefone maior que 8 caracteres
				return nome;
			} catch (IllegalArgumentException e) {
				System.out.print("ERRO: " + e.getMessage() + "\nTente novamente: ");
			}
		} while (true);
	}
	
	private static boolean readYORN() throws IOException {
		while (true) {
			DataInputStream in = new DataInputStream(System.in);
			String entrada = in.readLine();
			if (entrada != null && entrada.length() > 0) {
				char c = Character.toUpperCase(entrada.trim().charAt(0));
				if (c == 'S') {
					return true;
				} else if (c == 'N') {
					return false;
				}
			} else {
				System.out.print("Escolha inválida. Digite SIM ou NAO >>> ");
			}
		}
 	}
}
